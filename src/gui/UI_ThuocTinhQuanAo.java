package gui;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.table.DefaultTableModel;
import dao.DAO_ChatLieu;
import dao.DAO_KichCo;
import dao.DAO_LoaiQuanAo;
import dao.DAO_MauSac;
import dao.DAO_ThuongHieu;
import entity.ChatLieu;
import entity.KichCo;


import entity.LoaiQuanAo;
import entity.MauSac;

import entity.ThuongHieu;



/**
 *
 * @author ThanhDinh
 */
public class UI_ThuocTinhQuanAo extends JPanel implements ActionListener{
	private boolean isThemActive = false;
    private boolean isSuaActive = false;
    
    private DAO_ChatLieu chatLieu_DAO = new DAO_ChatLieu();
    private DAO_KichCo kichCo_DAO = new DAO_KichCo();
    private DAO_LoaiQuanAo loaiQuanAo_DAO = new DAO_LoaiQuanAo();
    private DAO_MauSac mauSac_DAO = new DAO_MauSac();
    private DAO_ThuongHieu thuongHieu_DAO = new DAO_ThuongHieu();
    
	private JButton btn_Luu;
    private JButton btn_Sua;
    private JButton btn_Them;
    private JLabel lb_tenThuocTinh;
    private JLabel lbl_ThuocTinh;
    private JLabel lbl_danhSachThuocTinh;
    private JPanel pn_Bottom;
    private JPanel pn_Center;
    private JPanel pn_Form;
    private JPanel pn_Top;
    private JRadioButton rad_ChatLieu;
    private JRadioButton rad_KichCo;
    private JRadioButton rad_LoaiQuanAo;
    private JRadioButton rad_MauSac;
    private JRadioButton rad_ThuongHieu;
    private JScrollPane scr_DSSP1;
    private JTable tbl_danhSachThuocTinh;
    private JTextField txt_tenThuocTinh;
    private DefaultTableModel model;
    private javax.swing.ButtonGroup buttonGroup1;
    public UI_ThuocTinhQuanAo() {
        initComponents();
        addEvent();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    	buttonGroup1 = new javax.swing.ButtonGroup();
        pn_Form = new JPanel();
        pn_Center = new JPanel();
        lb_tenThuocTinh = new JLabel();
        txt_tenThuocTinh = new JTextField();
        btn_Them = new JButton();
        btn_Sua = new JButton();
        btn_Luu = new JButton();
        rad_MauSac = new JRadioButton();
        rad_LoaiQuanAo = new JRadioButton();
        rad_ThuongHieu = new JRadioButton();
        rad_KichCo = new JRadioButton();
        rad_ChatLieu = new JRadioButton();
        pn_Top = new JPanel();
        lbl_ThuocTinh = new JLabel();
        pn_Bottom = new JPanel();
        scr_DSSP1 = new JScrollPane();
        tbl_danhSachThuocTinh = new JTable();
        lbl_danhSachThuocTinh = new JLabel();

        setPreferredSize(new java.awt.Dimension(1302, 746));

        pn_Form.setPreferredSize(new java.awt.Dimension(1302, 746));

        pn_Center.setBorder(BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pn_Center.setPreferredSize(new java.awt.Dimension(1302, 108));

        lb_tenThuocTinh.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lb_tenThuocTinh.setText("Tên Thuộc Tính:");

        btn_Them.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_Them.setIcon(new ImageIcon("D:\\Nhom18_PTUD_DoAn\\QLThoiTrang\\icon\\add.png")); // NOI18N
        btn_Them.setText("Thêm");
        btn_Them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ThemActionPerformed(evt);
            }
        });

        btn_Sua.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_Sua.setIcon(new ImageIcon("D:\\Nhom18_PTUD_DoAn\\QLThoiTrang\\icon\\fix.png")); // NOI18N
        btn_Sua.setText("Sửa");
        btn_Sua.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_suaMouseClicked(evt);
            }
        });

        btn_Luu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_Luu.setIcon(new ImageIcon("D:\\Nhom18_PTUD_DoAn\\QLThoiTrang\\icon\\save.png")); // NOI18N
        btn_Luu.setText("Lưu");
        btn_Luu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_luuMouseClicked(evt);
            }
        });
        buttonGroup1.add(rad_MauSac);
        rad_MauSac.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rad_MauSac.setText("Màu Sắc");

        buttonGroup1.add(rad_LoaiQuanAo);
        rad_LoaiQuanAo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rad_LoaiQuanAo.setText("Loại Quần Áo");

        buttonGroup1.add(rad_ThuongHieu);
        rad_ThuongHieu.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rad_ThuongHieu.setText("Thương Hiệu");

        buttonGroup1.add(rad_KichCo);
        rad_KichCo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rad_KichCo.setText("Kích Cỡ");

        buttonGroup1.add(rad_ChatLieu);
        rad_ChatLieu.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rad_ChatLieu.setText("Chất Liệu");

        GroupLayout pn_CenterLayout = new GroupLayout(pn_Center);
        pn_Center.setLayout(pn_CenterLayout);
        pn_CenterLayout.setHorizontalGroup(
            pn_CenterLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pn_CenterLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(lb_tenThuocTinh)
                .addGap(38, 38, 38)
                .addGroup(pn_CenterLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addGroup(pn_CenterLayout.createSequentialGroup()
                        .addComponent(btn_Them)
                        .addGap(34, 34, 34)
                        .addComponent(btn_Sua)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_Luu, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE))
                    .addComponent(txt_tenThuocTinh, GroupLayout.PREFERRED_SIZE, 367, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 103, Short.MAX_VALUE)
                .addGroup(pn_CenterLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(GroupLayout.Alignment.TRAILING, pn_CenterLayout.createSequentialGroup()
                        .addComponent(rad_MauSac)
                        .addGap(63, 63, 63)
                        .addComponent(rad_LoaiQuanAo)
                        .addGap(65, 65, 65)
                        .addComponent(rad_ThuongHieu)
                        .addGap(145, 145, 145))
                    .addGroup(GroupLayout.Alignment.TRAILING, pn_CenterLayout.createSequentialGroup()
                        .addComponent(rad_KichCo)
                        .addGap(120, 120, 120)
                        .addComponent(rad_ChatLieu)
                        .addGap(239, 239, 239))))
        );
        pn_CenterLayout.setVerticalGroup(
            pn_CenterLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pn_CenterLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(pn_CenterLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(rad_MauSac)
                    .addComponent(rad_LoaiQuanAo)
                    .addComponent(rad_ThuongHieu))
                .addGap(18, 18, 18)
                .addGroup(pn_CenterLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(rad_ChatLieu)
                    .addComponent(rad_KichCo)))
            .addGroup(pn_CenterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pn_CenterLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(lb_tenThuocTinh)
                    .addComponent(txt_tenThuocTinh, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(pn_CenterLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Them, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_Sua, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Luu)))
        );

        GroupLayout pn_FormLayout = new GroupLayout(pn_Form);
        pn_Form.setLayout(pn_FormLayout);
        pn_FormLayout.setHorizontalGroup(
            pn_FormLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(pn_Center, GroupLayout.DEFAULT_SIZE, 1310, Short.MAX_VALUE)
        );
        pn_FormLayout.setVerticalGroup(
            pn_FormLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pn_FormLayout.createSequentialGroup()
                .addComponent(pn_Center, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pn_Top.setBorder(BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pn_Top.setPreferredSize(new java.awt.Dimension(808, 72));

        lbl_ThuocTinh.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbl_ThuocTinh.setText("THUỘC TÍNH QUẦN ÁO");

        GroupLayout pn_TopLayout = new GroupLayout(pn_Top);
        pn_Top.setLayout(pn_TopLayout);
        pn_TopLayout.setHorizontalGroup(
            pn_TopLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, pn_TopLayout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_ThuocTinh)
                .addGap(461, 461, 461))
        );
        pn_TopLayout.setVerticalGroup(
            pn_TopLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pn_TopLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_ThuocTinh, GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                .addContainerGap())
        );

        pn_Bottom.setBorder(BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pn_Bottom.setPreferredSize(new java.awt.Dimension(1302, 540));

        model = new DefaultTableModel();
		tbl_danhSachThuocTinh = new JTable(model);
		tbl_danhSachThuocTinh.setRowHeight(25);     
		model.addColumn("Mã Thuộc Tính");
		model.addColumn("Thuộc Tính");
		
		tbl_danhSachThuocTinh.setRowHeight(30);
        tbl_danhSachThuocTinh.setShowHorizontalLines(true);
        tbl_danhSachThuocTinh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_danhSachThuocTinhMouseClicked(evt);
            }
        });
		
		JScrollPane sp = new JScrollPane(tbl_danhSachThuocTinh, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED,
				JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
		sp.setPreferredSize(new Dimension(1000, 400));
		pn_Bottom.add(sp);

        
        scr_DSSP1.setViewportView(tbl_danhSachThuocTinh);

        lbl_danhSachThuocTinh.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        lbl_danhSachThuocTinh.setForeground(new java.awt.Color(0, 102, 255));
        lbl_danhSachThuocTinh.setText("Danh Sách Thuộc Tính");

        GroupLayout pn_BottomLayout = new GroupLayout(pn_Bottom);
        pn_Bottom.setLayout(pn_BottomLayout);
        pn_BottomLayout.setHorizontalGroup(
            pn_BottomLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pn_BottomLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pn_BottomLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(pn_BottomLayout.createSequentialGroup()
                        .addComponent(lbl_danhSachThuocTinh, GroupLayout.PREFERRED_SIZE, 142, GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(scr_DSSP1))
                .addContainerGap())
        );
        pn_BottomLayout.setVerticalGroup(
            pn_BottomLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pn_BottomLayout.createSequentialGroup()
                .addComponent(lbl_danhSachThuocTinh, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scr_DSSP1, GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE)
                .addContainerGap())
        );

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(pn_Form, GroupLayout.DEFAULT_SIZE, 1310, Short.MAX_VALUE)
                    .addComponent(pn_Bottom, GroupLayout.DEFAULT_SIZE, 1310, Short.MAX_VALUE)
                    .addComponent(pn_Top, GroupLayout.DEFAULT_SIZE, 1310, Short.MAX_VALUE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pn_Top, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pn_Form, GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pn_Bottom, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        napDuLieuCSDLThuongHieu(thuongHieu_DAO.getAllThuongHieu());
        napDuLieuCSDLChatLieu(chatLieu_DAO.getAllChatLieu());
        napDuLieuCSDLKichCo(kichCo_DAO.getAllKichCo());
        napDuLieuCSDLLoaiQuanAo(loaiQuanAo_DAO.getAllLoai());
        napDuLieuCSDLMauSac(mauSac_DAO.getAllMauSac());
    }// </editor-fold>//GEN-END:initComponents
    
    // Nap Du Lieu
    private void napDuLieuCSDLThuongHieu(ArrayList<ThuongHieu> dsThuongHieu){     
        DefaultTableModel dtm = (DefaultTableModel) tbl_danhSachThuocTinh.getModel();
        dtm.getDataVector().removeAllElements();
        for(ThuongHieu th : dsThuongHieu){
           model.addRow(new Object[]{th.getMaThuongHieu(), th.getThuongHieu()});
        }
    }
    private void napDuLieuCSDLChatLieu(ArrayList<ChatLieu> dsChatLieu){     
        DefaultTableModel dtm = (DefaultTableModel) tbl_danhSachThuocTinh.getModel();
        dtm.getDataVector().removeAllElements();
        for(ChatLieu cl : dsChatLieu){
           model.addRow(new Object[]{cl.getMaChatLieu(), cl.getChatLieu()});
        }
    }
    private void napDuLieuCSDLKichCo(ArrayList<KichCo> dsKichCo){     
        DefaultTableModel dtm = (DefaultTableModel) tbl_danhSachThuocTinh.getModel();
        dtm.getDataVector().removeAllElements();
        for(KichCo kc : dsKichCo){
           model.addRow(new Object[]{kc.getMaKichCo(), kc.getKichCo()});
        }
    }
    private void napDuLieuCSDLLoaiQuanAo(ArrayList<LoaiQuanAo> dsLoaiQuanAo){     
        DefaultTableModel dtm = (DefaultTableModel) tbl_danhSachThuocTinh.getModel();
        dtm.getDataVector().removeAllElements();
        for(LoaiQuanAo loai : dsLoaiQuanAo){
           model.addRow(new Object[]{loai.getMaLoai(), loai.getLoai()});
        }
    }
    private void napDuLieuCSDLMauSac(ArrayList<MauSac> dsMauSac){     
        DefaultTableModel dtm = (DefaultTableModel) tbl_danhSachThuocTinh.getModel();
        dtm.getDataVector().removeAllElements();
        for(MauSac ms : dsMauSac){
           model.addRow(new Object[]{ms.getMaMauSac(), ms.getMauSac()});
        }
    }
    
    
    private void isthemThuocTinhClick(boolean check){
        isThemActive = check;
        isSuaActive = !check;
        
        rad_ChatLieu.setEnabled(false);
        rad_KichCo.setEnabled(false);
        rad_LoaiQuanAo.setEnabled(false);
        rad_MauSac.setEnabled(false);
        rad_ThuongHieu.setEnabled(false);
        
        
        if(isThemActive){
            btn_Them.setText("Huỷ");
            btn_Sua.setEnabled(false);
        }
        else if(isSuaActive){
            btn_Sua.setText("Huỷ");
            btn_Them.setEnabled(false);
        }  
        txt_tenThuocTinh.setEnabled(true);
        btn_Luu.setEnabled(true);
    } private void huyThaoTaoThuocTinh(){
        isThemActive = false;
        isSuaActive = false;
        btn_Them.setText("Thêm");
        btn_Sua.setText("Sửa");
        
        btn_Luu.setEnabled(false);
        btn_Them.setEnabled(true);
        btn_Sua.setEnabled(true);
        txt_tenThuocTinh.setEnabled(false);
        
        rad_ChatLieu.setEnabled(true);
        rad_KichCo.setEnabled(true);
        rad_LoaiQuanAo.setEnabled(true);
        rad_MauSac.setEnabled(true);
        rad_ThuongHieu.setEnabled(true);
        
    }
    
    private void btn_ThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ThemActionPerformed
    	if(btn_Them.getText().equalsIgnoreCase("Thêm")){
            isthemThuocTinhClick(true);
            clearInput();
    	}
        else if(btn_Them.getText().equalsIgnoreCase("Huỷ")){
            huyThaoTaoThuocTinh();
            clearInput();
        }
    }//GEN-LAST:event_btn_ThemActionPerformed
    private void tbl_danhSachThuocTinhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_danhSachThuocTinhMouseClicked
        // TODO add your handling code here:
        String id = (String) tbl_danhSachThuocTinh.getValueAt(tbl_danhSachThuocTinh.getSelectedRow(), 0);
        if(rad_LoaiQuanAo.isSelected()){
            LoaiQuanAo e_LoaiQuanAo = loaiQuanAo_DAO.getLoai(id);
            if(e_LoaiQuanAo == null){
                return;
            }
            txt_tenThuocTinh.setText(e_LoaiQuanAo.getLoai());
        }
        else if(rad_MauSac.isSelected()){
            MauSac e_MauSac = mauSac_DAO.getMauSac(id);
            if(e_MauSac == null){
                return;
            }
            txt_tenThuocTinh.setText(e_MauSac.getMauSac());
        }
        else if(rad_ChatLieu.isSelected()){
            ChatLieu e_ChatLieu = chatLieu_DAO.getChatLieu(id);
            if(e_ChatLieu == null){
                return;
            }
            txt_tenThuocTinh.setText(e_ChatLieu.getChatLieu());
        }
        else if(rad_KichCo.isSelected()){
            KichCo e_KichCo = kichCo_DAO.getKichCo(id);
            if(e_KichCo == null){
                return;
            }
            txt_tenThuocTinh.setText(e_KichCo.getKichCo());
        }
        else if(rad_ThuongHieu.isSelected()){
            ThuongHieu e_ThuongHieu = thuongHieu_DAO.getThuongHieu(id);
            if(e_ThuongHieu == null){
                return;
            }
            txt_tenThuocTinh.setText(e_ThuongHieu.getThuongHieu());
        }
        
    }
    private void btn_suaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_suaMouseClicked
        // TODO add your handling code here:
        if(tbl_danhSachThuocTinh.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(null, "Vui lòng chọn dữ liệu để sửa");
            return;
        }
        
        if(btn_Sua.getText().equalsIgnoreCase("Sửa")){
            isthemThuocTinhClick(false);
        }
        else if(btn_Sua.getText().equalsIgnoreCase("Huỷ")){
            huyThaoTaoThuocTinh();
        }
    }
    
    
    private void btn_luuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_luuMouseClicked
        // TODO add your handling code here:
        String thuocTinh = txt_tenThuocTinh.getText();
        if(isThemActive){
            if(rad_LoaiQuanAo.isSelected()){
                themLoaiQuanAo(thuocTinh);
            }
            else if(rad_MauSac.isSelected()){
                themMauSac(thuocTinh);
            }
            else if(rad_ChatLieu.isSelected()){
                themChatLieu(thuocTinh);
            }
            else if(rad_KichCo.isSelected()){
                themKichCo(thuocTinh);
            }
            else if(rad_LoaiQuanAo.isSelected()){
                themLoaiQuanAo(thuocTinh);
            }
            else if(rad_ThuongHieu.isSelected()){
                themThuongHieu(thuocTinh);
            }
        }
        else if(isSuaActive){
            if(rad_ThuongHieu.isSelected()){
                suaThuongHieu(thuocTinh);
            } 
            else if(rad_MauSac.isSelected()){
                suaMauSac(thuocTinh);
            }
            else if(rad_ChatLieu.isSelected()){
                suaChatLieu(thuocTinh);
            }
            else if(rad_KichCo.isSelected()){
                suaKichCo(thuocTinh);
            }
            else if(rad_LoaiQuanAo.isSelected()){
                suaLoaiQuanAo(thuocTinh);
            }
        }    
        clearInput();
        huyThaoTaoThuocTinh();
    }//GEN-LAST:event_btn_luuMouseClicked
    
    
    
    private void themMauSac(String thuocTinh){
        MauSac e_MauSac = new MauSac(thuocTinh);
        if (validData()) {
            if (mauSac_DAO.themMauSac(e_MauSac)) {
                JOptionPane.showMessageDialog(null, "Thêm thành công");
                napDuLieuCSDLMauSac(mauSac_DAO.getAllMauSac());
                return;
            } else {
                JOptionPane.showMessageDialog(null, "Thêm thất bại");
            }
        }
    }
  
    private void themChatLieu(String thuocTinh){
            ChatLieu e_ChatLieu = new ChatLieu(thuocTinh);
        if (validData()) {
            if (chatLieu_DAO.themChatLieu(e_ChatLieu)) {
                JOptionPane.showMessageDialog(null, "Thêm thành công");
                napDuLieuCSDLChatLieu(chatLieu_DAO.getAllChatLieu());;
                return;
            } else {
                JOptionPane.showMessageDialog(null, "Thêm thất bại");
            }
        }
    }
    
    private void themKichCo(String thuocTinh){
          KichCo e_KichCo = new KichCo(thuocTinh);
        if (validData()) {
            if (kichCo_DAO.themKichCo(e_KichCo)) {
                JOptionPane.showMessageDialog(null, "Thêm thành công");
                napDuLieuCSDLKichCo(kichCo_DAO.getAllKichCo());;
                return;
            } else {
                JOptionPane.showMessageDialog(null, "Thêm thất bại");
            }
        }

        JOptionPane.showMessageDialog(null, "Thêm thất bại");
    }
    
    private void themLoaiQuanAo(String thuocTinh){
          LoaiQuanAo loai = new LoaiQuanAo(thuocTinh);
        if (validData()) {
            if (loaiQuanAo_DAO.themLoai(loai)) {
                JOptionPane.showMessageDialog(null, "Thêm thành công");
                napDuLieuCSDLLoaiQuanAo(loaiQuanAo_DAO.getAllLoai());
                return;
            } else {
                JOptionPane.showMessageDialog(null, "Thêm thất bại");
            }
        }
    }
    
    private void themThuongHieu(String thuocTinh){
          ThuongHieu e_ThuongHieu = new ThuongHieu(thuocTinh);
        if (validData()) {
            if (thuongHieu_DAO.themThuongHieu(e_ThuongHieu)) {
                JOptionPane.showMessageDialog(null, "Thêm thành công");
                napDuLieuCSDLThuongHieu(thuongHieu_DAO.getAllThuongHieu());
                return;
            } else {
                JOptionPane.showMessageDialog(null, "Thêm thất bại");
            }
        }
    }
    
    
    private void suaThuongHieu(String thuocTinh){
        if(txt_tenThuocTinh.getText().equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(null, "Vui lòng điền dữ liệu.");
            return;
        }
        
         ThuongHieu e_ThuongHieu = thuongHieu_DAO.getThuongHieu((String) tbl_danhSachThuocTinh.getValueAt(tbl_danhSachThuocTinh.getSelectedRow(), 0));
            e_ThuongHieu.setThuongHieu(thuocTinh);
            if(thuongHieu_DAO.suaThuongHieu(e_ThuongHieu)){
                JOptionPane.showMessageDialog(null, "Cập nhật thành công");
                napDuLieuCSDLThuongHieu(thuongHieu_DAO.getAllThuongHieu());;
                return;
            }
            JOptionPane.showMessageDialog(null, "Cập nhật thất bại");
    }
    
    private void suaMauSac(String thuocTinh){
        if(txt_tenThuocTinh.getText().equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(null, "Vui lòng điền dữ liệu.");
            return;
        }
        
         MauSac e_MauSac = mauSac_DAO.getMauSac((String) tbl_danhSachThuocTinh.getValueAt(tbl_danhSachThuocTinh.getSelectedRow(), 0));
            e_MauSac.setMauSac(thuocTinh);
            if(mauSac_DAO.suaMauSac(e_MauSac)){
                JOptionPane.showMessageDialog(null, "Cập nhật thành công");
                napDuLieuCSDLMauSac(mauSac_DAO.getAllMauSac());;
                return;
            }
            JOptionPane.showMessageDialog(null, "Cập nhật thất bại");
    }
    
    private void suaChatLieu(String thuocTinh){
        if(txt_tenThuocTinh.getText().equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(null, "Vui lòng điền dữ liệu.");
            return;
        }
        
         ChatLieu e_ChatLieu = chatLieu_DAO.getChatLieu((String) tbl_danhSachThuocTinh.getValueAt(tbl_danhSachThuocTinh.getSelectedRow(), 0));
            e_ChatLieu.setChatLieu(thuocTinh);
            if(chatLieu_DAO.suaChatLieu(e_ChatLieu)){
                JOptionPane.showMessageDialog(null, "Cập nhật thành công");
                napDuLieuCSDLChatLieu(chatLieu_DAO.getAllChatLieu());;
                return;
            }
            JOptionPane.showMessageDialog(null, "Cập nhật thất bại");
    }
    
    private void suaKichCo(String thuocTinh){
        if(txt_tenThuocTinh.getText().equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(null, "Vui lòng điền dữ liệu.");
            return;
        }
        
         KichCo e_KichCo = kichCo_DAO.getKichCo((String) tbl_danhSachThuocTinh.getValueAt(tbl_danhSachThuocTinh.getSelectedRow(), 0));
            e_KichCo.setKichCo(thuocTinh);
            if(kichCo_DAO.suaKichCo(e_KichCo)){
                JOptionPane.showMessageDialog(null, "Cập nhật thành công");
                napDuLieuCSDLKichCo(kichCo_DAO.getAllKichCo());;
                return;
            }
            JOptionPane.showMessageDialog(null, "Cập nhật thất bại");
    }
    
    private void suaLoaiQuanAo(String thuocTinh){
        if(txt_tenThuocTinh.getText().equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(null, "Vui lòng điền dữ liệu.");
            return;
        }
        
         LoaiQuanAo e_LoaiQuanAo = loaiQuanAo_DAO.getLoai((String) tbl_danhSachThuocTinh.getValueAt(tbl_danhSachThuocTinh.getSelectedRow(), 0));
            e_LoaiQuanAo.setLoai(thuocTinh);
            if(loaiQuanAo_DAO.suaLoai(e_LoaiQuanAo)){
                JOptionPane.showMessageDialog(null, "Cập nhật thành công");
                napDuLieuCSDLLoaiQuanAo(loaiQuanAo_DAO.getAllLoai());;
                return;
            }
            JOptionPane.showMessageDialog(null, "Cập nhật thất bại");
    }
    
   
    
    
    
  
	private void addEvent(){
        rad_ChatLieu.addActionListener(this);
        rad_KichCo.addActionListener(this);
        rad_LoaiQuanAo.addActionListener(this);
        rad_MauSac.addActionListener(this);
        rad_ThuongHieu.addActionListener(this);
    }
    
    @Override
    public void actionPerformed(ActionEvent e) {
        String event = e.getActionCommand();
        if(event.equalsIgnoreCase("Chất Liệu")){
            napDuLieuCSDLChatLieu(chatLieu_DAO.getAllChatLieu());
        }

        else if(event.equalsIgnoreCase("Kích Cỡ")){
            napDuLieuCSDLKichCo(kichCo_DAO.getAllKichCo());;
        }

        else if(event.equalsIgnoreCase("Màu Sắc")){
            napDuLieuCSDLMauSac(mauSac_DAO.getAllMauSac());;
        }

        else if(event.equalsIgnoreCase("Loại Quần Áo")){
            napDuLieuCSDLLoaiQuanAo(loaiQuanAo_DAO.getAllLoai());;
        }
        else if(event.equalsIgnoreCase("Thương Hiệu")){
            napDuLieuCSDLThuongHieu(thuongHieu_DAO.getAllThuongHieu());;
        } 
    }
    private void clearInput(){
        txt_tenThuocTinh.setText("");
    }
    
    private void clearTable(){
        DefaultTableModel dtm = (DefaultTableModel) tbl_danhSachThuocTinh.getModel();
        dtm.setRowCount(0);
    }
	public boolean validData() {
        String tenThuocTinh = txt_tenThuocTinh.getText().trim();

        if (tenThuocTinh.length() == 0) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập tên thuộc tính");
            return false;
        }

        return true;
    }
}
